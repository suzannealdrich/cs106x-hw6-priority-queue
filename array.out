-----------   Testing Basic Queue functions -----------The queue was just created.  Is it empty?  Yes.Inserted the integers from 1 to 10 (in forward order)Queue should not be empty.  Is it? No.Extracting the top 5 elements: 10 9 8 7 6 Extracting all the rest: 5 4 3 2 1 Queue should be empty.  Is it?  Yes.Ready to go on? -----------   More queue testing functions -----------Inserting the integers from 1 to 15 (in reverse order)Inserting duplicates for evens from 2 to 14Extracting the top 10 elements:15 14 14 13 12 12 11 10 10 9 Extracting all the rest: 8  8  7  6  6  5  4  4  3  2  2  1  0 Queue should be empty.  Is it?  Yes.Ready to go on? -----------   Testing Search/Delete -----------Inserting the integers from 1 to 6Searching for 2, which should be found.  Is it? Yes.Searching for 12, which should not be found.  Is it? No.Deleting all the even numbers from 2 to 6Deleting elem 2, got result 2 (should be 2)Deleting elem 4, got result 4 (should be 4)Deleting elem 6, got result 6 (should be 6)Now delete the odd numbers:Deleting elem 1, got result 1 (should be 1)Deleting elem 3, got result 3 (should be 3)Deleting elem 5, got result 5 (should be 5)Queue should be empty.  Is it?  Yes.Searching an empty queue for 10, which should not be found.  Is it? No.Insert 3 duplicates of number 10.Delete all occurrences of number 10 using a loop.Queue should be empty.  Is it?  Yes.Ready to go on? -----------   Testing use of queue to sort  -----------Inserting 200 numbers into queue in increasing order.Using extract to pull out numbers in sorted order.  Did it work? Yes.Inserting 200 random values into the queue.Using extract to pull out numbers in sorted order.  Did it work? Yes.Ready to go on?  ---------- Time trial for 1000 element queue -----------time to insert 1000 elements into queue: 0time to extract 1000 elements: 0average time to search a queue of 1000 elements: 0time to delete 1000 elements: 0time to heapsort array of size 1000: 0time to heapsort (already sorted) array of size 1000: 0time to heapsort (reverse sorted) array of size 1000: 0Ready to go on?  ---------- Time trial for 5000 element queue -----------time to insert 5000 elements into queue: 0time to extract 5000 elements: 17average time to search a queue of 5000 elements: 0.0038time to delete 5000 elements: 16time to heapsort array of size 5000: 18time to heapsort (already sorted) array of size 5000: 13time to heapsort (reverse sorted) array of size 5000: 16Ready to go on?  ---------- Time trial for 10000 element queue -----------time to insert 10000 elements into queue: 0time to extract 10000 elements: 75average time to search a queue of 10000 elements: 0.01time to delete 10000 elements: 69time to heapsort array of size 10000: 75time to heapsort (already sorted) array of size 10000: 58time to heapsort (reverse sorted) array of size 10000: 65Ready to go on? All done!